<?xml version="1.0"?>
<todo version="0.1.20">
    <note priority="high" time="1405190773" done="1405245739">
        NotNull pointer template - one to cover all smart pointers and raw pointers
        <comment>
            implemented
        </comment>
    </note>
    <note priority="medium" time="1391105418" done="1405245748">
        smart pointer that is guaranteed not to be nullptr
        <comment>
            covered by NotNull
        </comment>
    </note>
    <note priority="medium" time="1391105431" done="1405245761">
        raw pointer wrapper that is guaranteed not to be nullptr
        <comment>
            covered by NotNull
        </comment>
    </note>
    <note priority="medium" time="1391105465" done="1405245877">
        facilities for easy creation of derived exceptions for a given scope
        <comment>
            already implemented for some time... ;)
        </comment>
    </note>
    <note priority="medium" time="1399737323" done="1405248754">
        something is wrong when doing clang with libc++ (link error - no flag). when running 'ccmake .' and exiting it links fine
        <comment>
            fixed - the problem was variable has been set BEFORE project() was called - looks like in this case order is important as well..."
        </comment>
    </note>
    <note priority="medium" time="1403381658" done="1408282267">
        add dispatcher automatically passing messages to their destinations (customizable message type ID getting)
        <comment>
            implemented
        </comment>
    </note>
    <note priority="medium" time="1405798308" done="1405871536">
        CacheLineStorage - template to keep data aligned to cache size and padded, so that nothing more squeezes in
        <comment>
            CacheLine implemented
        </comment>
    </note>
    <note priority="low" time="1392392163" done="1405245837">
        exception throwing funciton, that ensures some reasonable error on memeory allocation
        <comment>
            bad_alloc is just fine - otherwise a lot of extra code will be generated, just to serve almost non-appearing condition
        </comment>
    </note>
    <note priority="high" time="1449916669" done="1482444336">
        split build into full-fatures and includable one, so that users do not need to relay on toolchain/build-modes settings (these are probably solved already by their own setup)
        <comment>
            done
        </comment>
    </note>
    <note priority="high" time="1482428187">
        implement BitStoredVector, for values encoded in (any) N-bit values, with serialization and deserialization (sth. like std::vector&lt;bool&gt;, but for any type)
    </note>
    <note priority="medium" time="1400512964">
        tests for logging facilities
    </note>
    <note priority="medium" time="1447835445">
        add value-based configuration I/O (i.e. the one that does not require default c-tors and syntax is compact, when it comes to r/w cfg from/to file)
    </note>
    <note priority="medium" time="1447865296">
        implement BasicLockable&lt;CRTP&gt;
    </note>
    <note priority="medium" time="1447865309">
        implement BasicLockableWithLockProxy&lt;CRTP&gt;
    </note>
    <note priority="medium" time="1456730821">
        iterator wrappers to make creation of more-constrained iterators easier (eg. forward-iterator out of random-access iterator)
    </note>
    <note priority="medium" time="1461493793">
        sharedString&lt;&gt; - read-only data strucutre, that shares underlying data poitner between instances
    </note>
    <note priority="medium" time="1466352707">
        add convenience function: apply(function, tuple)
    </note>
    <note priority="medium" time="1469898747">
        add Guard class and makeGuardhelper functor
    </note>
    <note priority="low" time="1408282338">
        add support for different dispatching mechanisms (hash_table vs. generated search code)
    </note>
    <note priority="low" time="1408282352">
        add support for runtime IDs, via policies
    </note>
    <note priority="low" time="1446643861">
        implement But::makeSharedNN&lt;&gt;() and But::makeUniqueNN&lt;&gt;() helpers
    </note>
    <note priority="low" time="1448391305">
        PRNG-seeded hash function wrapper, to prevent O(N) hash tables attack?
    </note>
    <note priority="low" time="1449762961">
        But::Mpl::LastType&lt;&gt; in O(1)
    </note>
    <note priority="low" time="1453546619">
        but::optional, that is movable
    </note>
    <note priority="low" time="1455729383">
        C++ streams formating via overloads? sth. like out &lt;&lt; hex(42) maybe?
    </note>
    <note priority="low" time="1461493855">
        logger feature for buffering debug logs for some time, so that they are logged only if warning/error occures, but dropping if nothing 'special' happens for some time
    </note>
    <note priority="low" time="1482426926">
        modify Exception message, so that all static info from base to the last derived class are shown
    </note>
</todo>
